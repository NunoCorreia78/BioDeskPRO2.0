using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Runtime.CompilerServices;

namespace BioDesk.Domain.Entities;

/// <summary>
/// EXPANDER 9) ESTILO DE VIDA üü° IMPORTANTE
/// H√°bitos de vida: exerc√≠cio, alimenta√ß√£o, sono, stress, v√≠cios
/// SL (stress 0-10) ¬∑ CHIP (exerc√≠cios) ¬∑ DD (frequ√™ncia) ¬∑ NUM (horas sono) ¬∑ CHK (v√≠cios)
/// </summary>
public class EstiloVidaExpander : ExpanderBase
{
    public override PrioridadeClinica PrioridadeClinica => PrioridadeClinica.Importante;
    public override string NomeExpander => "9) Estilo de Vida";

    // EXERC√çCIO F√çSICO
    private List<string> _tiposExercicio = new();
    private string _frequenciaExercicio = "Nunca";
    private int _duracaoExercicio = 0; // minutos
    private string _intensidadeExercicio = "Ligeira";

    // ALIMENTA√á√ÉO
    private string _padraoAlimentar = "Omn√≠voro";
    private List<string> _restricoesAlimentares = new();
    private int _refeicoesDay = 3;
    private string _hidratacao = "1-2 litros";
    private string _suplementacao = string.Empty;

    // SONO
    private int _horasSono = 7;
    private string _qualidadeSono = "Boa";
    private List<string> _problemasSono = new();
    private string _horarioSono = "22:00-07:00";

    // STRESS
    private int _nivelStress = 5; // 0-10
    private List<string> _fontesStress = new();
    private List<string> _gestaoStress = new();

    // V√çCIOS E H√ÅBITOS
    private string _tabaco = "Nunca fumei";
    private string _alcool = "Nunca bebo";
    private string _cafeina = "1-2 caf√©s/dia";
    private List<string> _outrasSubstancias = new();

    // TRABALHO E AMBIENTE
    private string _tipoTrabalho = "Escrit√≥rio";
    private int _horasTrabalho = 8;
    private string _exposicaoRiscos = string.Empty;

    // VIDA SOCIAL
    private string _relacionamentos = "Bom";
    private string _apoioSocial = "Adequado";
    private List<string> _hobbies = new();

    // PROPRIEDADES - EXERC√çCIO
    public List<string> TiposExercicio
    {
        get => _tiposExercicio;
        set { _tiposExercicio = value; OnPropertyChanged(); }
    }

    public string FrequenciaExercicio
    {
        get => _frequenciaExercicio;
        set { _frequenciaExercicio = value; OnPropertyChanged(); }
    }

    public int DuracaoExercicio
    {
        get => _duracaoExercicio;
        set { _duracaoExercicio = Math.Max(0, value); OnPropertyChanged(); }
    }

    public string IntensidadeExercicio
    {
        get => _intensidadeExercicio;
        set { _intensidadeExercicio = value; OnPropertyChanged(); }
    }

    // PROPRIEDADES - ALIMENTA√á√ÉO
    public string PadraoAlimentar
    {
        get => _padraoAlimentar;
        set { _padraoAlimentar = value; OnPropertyChanged(); }
    }

    public List<string> RestricoesAlimentares
    {
        get => _restricoesAlimentares;
        set { _restricoesAlimentares = value; OnPropertyChanged(); }
    }

    public int RefeicoesDay
    {
        get => _refeicoesDay;
        set { _refeicoesDay = Math.Max(1, Math.Min(8, value)); OnPropertyChanged(); }
    }

    public string Hidratacao
    {
        get => _hidratacao;
        set { _hidratacao = value; OnPropertyChanged(); }
    }

    public string Suplementacao
    {
        get => _suplementacao;
        set { _suplementacao = value; OnPropertyChanged(); }
    }

    // PROPRIEDADES - SONO
    public int HorasSono
    {
        get => _horasSono;
        set { _horasSono = Math.Max(1, Math.Min(24, value)); OnPropertyChanged(); }
    }

    public string QualidadeSono
    {
        get => _qualidadeSono;
        set { _qualidadeSono = value; OnPropertyChanged(); }
    }

    public List<string> ProblemasSono
    {
        get => _problemasSono;
        set { _problemasSono = value; OnPropertyChanged(); }
    }

    public string HorarioSono
    {
        get => _horarioSono;
        set { _horarioSono = value; OnPropertyChanged(); }
    }

    // PROPRIEDADES - STRESS
    public int NivelStress
    {
        get => _nivelStress;
        set { _nivelStress = Math.Max(0, Math.Min(10, value)); OnPropertyChanged(); }
    }

    public List<string> FontesStress
    {
        get => _fontesStress;
        set { _fontesStress = value; OnPropertyChanged(); }
    }

    public List<string> GestaoStress
    {
        get => _gestaoStress;
        set { _gestaoStress = value; OnPropertyChanged(); }
    }

    // PROPRIEDADES - V√çCIOS
    public string Tabaco
    {
        get => _tabaco;
        set { _tabaco = value; OnPropertyChanged(); }
    }

    public string Alcool
    {
        get => _alcool;
        set { _alcool = value; OnPropertyChanged(); }
    }

    public string Cafeina
    {
        get => _cafeina;
        set { _cafeina = value; OnPropertyChanged(); }
    }

    public List<string> OutrasSubstancias
    {
        get => _outrasSubstancias;
        set { _outrasSubstancias = value; OnPropertyChanged(); }
    }

    // PROPRIEDADES - TRABALHO
    public string TipoTrabalho
    {
        get => _tipoTrabalho;
        set { _tipoTrabalho = value; OnPropertyChanged(); }
    }

    public int HorasTrabalho
    {
        get => _horasTrabalho;
        set { _horasTrabalho = Math.Max(0, Math.Min(24, value)); OnPropertyChanged(); }
    }

    public string ExposicaoRiscos
    {
        get => _exposicaoRiscos;
        set { _exposicaoRiscos = value; OnPropertyChanged(); }
    }

    // PROPRIEDADES - VIDA SOCIAL
    public string Relacionamentos
    {
        get => _relacionamentos;
        set { _relacionamentos = value; OnPropertyChanged(); }
    }

    public string ApoioSocial
    {
        get => _apoioSocial;
        set { _apoioSocial = value; OnPropertyChanged(); }
    }

    public List<string> Hobbies
    {
        get => _hobbies;
        set { _hobbies = value; OnPropertyChanged(); }
    }

    // PROPRIEDADES CALCULADAS
    public string ResumoExercicio => FrequenciaExercicio == "Nunca" 
        ? "Sedent√°rio" 
        : $"{FrequenciaExercicio} | {DuracaoExercicio}min | {IntensidadeExercicio}";

    public string ResumoSono => $"{HorasSono}h | {QualidadeSono}";

    public string ResumoStress => $"N√≠vel {NivelStress}/10";

    public bool TemFactoresRisco => 
        Tabaco.Contains("Fumador") || 
        Alcool.Contains("Di√°rio") || 
        NivelStress >= 8 || 
        HorasSono < 6;

    public string ResumoEstiloVida
    {
        get
        {
            var componentes = new List<string>();
            
            // Exerc√≠cio
            if (FrequenciaExercicio != "Nunca")
                componentes.Add($"Exerc√≠cio: {FrequenciaExercicio}");
            
            // Sono
            componentes.Add($"Sono: {HorasSono}h");
            
            // Stress
            if (NivelStress >= 7)
                componentes.Add($"Stress: {NivelStress}/10");
            
            // V√≠cios
            if (Tabaco.Contains("Fumador"))
                componentes.Add("Tabaco");
            if (Alcool.Contains("Di√°rio") || Alcool.Contains("Excessivo"))
                componentes.Add("√Ålcool");
                
            return componentes.Count > 0 ? string.Join(" | ", componentes) : "N√£o avaliado";
        }
    }

    // OP√á√ïES PR√â-DEFINIDAS
    public static List<string> OpcoesTiposExercicio => new()
    {
        // CARDIO
        "Caminhada",
        "Corrida/Jogging",
        "Ciclismo",
        "Nata√ß√£o",
        "Dan√ßa",
        "Aer√≥bica",
        "Spinning",

        // FOR√áA
        "Muscula√ß√£o",
        "Pilates",
        "Yoga",
        "Crossfit",
        "Calistenia",

        // DESPORTOS
        "Futebol",
        "T√©nis",
        "Padel",
        "Basquetebol",
        "Volleyball",
        "Artes marciais",

        // OUTROS
        "Jardinagem",
        "Tarefas dom√©sticas",
        "Subir escadas",
        "Outro"
    };

    public static List<string> OpcoesFrequenciaExercicio => new()
    {
        "Nunca",
        "Raramente",
        "1-2 vezes/semana",
        "3-4 vezes/semana",
        "5-6 vezes/semana",
        "Diariamente"
    };

    public static List<string> OpcoesIntensidadeExercicio => new()
    {
        "Ligeira",
        "Moderada", 
        "Intensa",
        "Muito intensa"
    };

    public static List<string> OpcoesPadraoAlimentar => new()
    {
        "Omn√≠voro",
        "Vegetariano",
        "Vegano",
        "Pescetariano",
        "Mediterr√¢nico",
        "Low-carb",
        "Keto",
        "Paleo",
        "Outro"
    };

    public static List<string> OpcoesRestricoes => new()
    {
        "Sem restri√ß√µes",
        "Gl√∫ten",
        "Lactose",
        "A√ß√∫car",
        "Sal",
        "Fritos",
        "Processados",
        "Carne vermelha",
        "√Ålcool",
        "Cafe√≠na",
        "Outra restri√ß√£o"
    };

    public static List<string> OpcoesHidratacao => new()
    {
        "Menos de 1 litro",
        "1-2 litros",
        "2-3 litros",
        "Mais de 3 litros"
    };

    public static List<string> OpcoesQualidadeSono => new()
    {
        "Excelente",
        "Boa",
        "Razo√°vel",
        "M√°",
        "Muito m√°"
    };

    public static List<string> OpcoesProblemasSono => new()
    {
        "Nenhum",
        "Dificuldade adormecer",
        "Acordar durante a noite",
        "Acordar muito cedo",
        "Pesadelos",
        "Ressonar",
        "Apneia do sono",
        "Pernas inquietas",
        "Ins√≥nia"
    };

    public static List<string> OpcoesFontesStress => new()
    {
        "Trabalho",
        "Fam√≠lia",
        "Finan√ßas",
        "Sa√∫de",
        "Relacionamentos",
        "Estudos",
        "Tr√¢nsito",
        "Habita√ß√£o",
        "Futuro",
        "Solid√£o",
        "Tecnologia",
        "Not√≠cias",
        "Outro"
    };

    public static List<string> OpcoesGestaoStress => new()
    {
        "Exerc√≠cio f√≠sico",
        "Medita√ß√£o",
        "Respira√ß√£o profunda",
        "Yoga",
        "M√∫sica",
        "Leitura",
        "Passear",
        "Conversar com amigos",
        "Hobbies",
        "Terapia",
        "N√£o fa√ßo nada",
        "Outro m√©todo"
    };

    public static List<string> OpcoesTabaco => new()
    {
        "Nunca fumei",
        "Ex-fumador",
        "Fumador ocasional",
        "Fumador moderado (1-10 cigarros/dia)",
        "Fumador pesado (>10 cigarros/dia)",
        "Cachimbo/charuto",
        "Cigarros eletr√¥nicos"
    };

    public static List<string> OpcoesAlcool => new()
    {
        "Nunca bebo",
        "Ocasionalmente",
        "Fins de semana",
        "2-3 vezes/semana",
        "Di√°rio moderado",
        "Di√°rio excessivo"
    };

    public static List<string> OpcoesCafeina => new()
    {
        "N√£o bebo cafe√≠na",
        "1 caf√©/dia",
        "2-3 caf√©s/dia",
        "4-5 caf√©s/dia",
        ">5 caf√©s/dia",
        "Ch√° principalmente",
        "Bebidas energ√©ticas"
    };

    public static List<string> OpcoesTipoTrabalho => new()
    {
        "Escrit√≥rio",
        "Manual",
        "Misto",
        "Dom√©stico",
        "Estudante",
        "Reformado",
        "Desempregado",
        "Outro"
    };

    public static List<string> OpcoesRelacionamentos => new()
    {
        "Excelente",
        "Bom",
        "Razo√°vel",
        "Dif√≠cil",
        "Isolado"
    };

    public static List<string> OpcoesApoioSocial => new()
    {
        "Muito bom",
        "Adequado",
        "Limitado",
        "Inexistente"
    };

    // VALIDA√á√ÉO
    public bool IsValid => true; // Sempre v√°lido

    public List<string> GetValidationErrors()
    {
        return new List<string>(); // Sem valida√ß√µes obrigat√≥rias
    }

    // AN√ÅLISE DE RISCO (simplificada)
    public string AvaliacaoRisco
    {
        get
        {
            var riscos = new List<string>();
            
            if (Tabaco.Contains("Fumador"))
                riscos.Add("üö¨ Tabaco");
            
            if (Alcool.Contains("Di√°rio") || Alcool.Contains("excessivo"))
                riscos.Add("üç∑ √Ålcool");
            
            if (FrequenciaExercicio == "Nunca")
                riscos.Add("üèÉ Sedentarismo");
            
            if (NivelStress >= 8)
                riscos.Add("üò∞ Stress elevado");
            
            if (HorasSono < 6)
                riscos.Add("üò¥ Sono insuficiente");
            
            return riscos.Count > 0 
                ? $"‚ö†Ô∏è Fatores de risco: {string.Join(", ", riscos)}"
                : "‚úÖ Estilo de vida saud√°vel";
        }
    }
}