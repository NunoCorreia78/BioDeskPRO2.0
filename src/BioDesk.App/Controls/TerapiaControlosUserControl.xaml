<UserControl x:Class="BioDesk.App.Controls.TerapiaControlosUserControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d"
             x:Name="RootControl"
             d:DesignHeight="500" d:DesignWidth="300">
    <Border Background="{DynamicResource Cartao}"
            BorderBrush="{DynamicResource Borda}"
            BorderThickness="2"
            CornerRadius="8"
            Padding="20">
        <ScrollViewer VerticalScrollBarVisibility="Auto"
                      HorizontalScrollBarVisibility="Disabled">
            <StackPanel>
                <TextBlock Text="CONTROLOS TERAPIA"
                           FontSize="16" FontWeight="SemiBold"
                           Foreground="{DynamicResource TextoPrincipal}"
                           Margin="0,0,0,20"/>

            <!-- Voltagem -->
            <TextBlock Text="⚡ Voltagem:"
                       FontSize="14" FontWeight="Medium"
                       Foreground="{DynamicResource TextoPrincipal}"
                       Margin="0,0,0,5"/>
            <ComboBox x:Name="VoltageComboBox"
                      SelectedValue="{Binding ElementName=RootControl, Path=VoltagemV, Mode=TwoWay}"
                      SelectedValuePath="Tag"
                      Height="35"
                      Margin="0,0,0,15">
                <ComboBoxItem Content="0.0 V" Tag="0.0"/>
                <ComboBoxItem Content="0.5 V" Tag="0.5"/>
                <ComboBoxItem Content="1.0 V" Tag="1.0"/>
                <ComboBoxItem Content="1.5 V" Tag="1.5"/>
                <ComboBoxItem Content="2.0 V" Tag="2.0"/>
                <ComboBoxItem Content="2.5 V" Tag="2.5"/>
                <ComboBoxItem Content="3.0 V" Tag="3.0"/>
                <ComboBoxItem Content="3.5 V" Tag="3.5"/>
                <ComboBoxItem Content="4.0 V" Tag="4.0"/>
                <ComboBoxItem Content="4.5 V" Tag="4.5"/>
                <ComboBoxItem Content="5.0 V" Tag="5.0" IsSelected="True"/>
                <ComboBoxItem Content="5.5 V" Tag="5.5"/>
                <ComboBoxItem Content="6.0 V" Tag="6.0"/>
                <ComboBoxItem Content="6.5 V" Tag="6.5"/>
                <ComboBoxItem Content="7.0 V" Tag="7.0"/>
                <ComboBoxItem Content="7.5 V" Tag="7.5"/>
                <ComboBoxItem Content="8.0 V" Tag="8.0"/>
                <ComboBoxItem Content="8.5 V" Tag="8.5"/>
                <ComboBoxItem Content="9.0 V" Tag="9.0"/>
                <ComboBoxItem Content="9.5 V" Tag="9.5"/>
                <ComboBoxItem Content="10.0 V" Tag="10.0"/>
                <ComboBoxItem Content="10.5 V" Tag="10.5"/>
                <ComboBoxItem Content="11.0 V" Tag="11.0"/>
                <ComboBoxItem Content="11.5 V" Tag="11.5"/>
                <ComboBoxItem Content="12.0 V" Tag="12.0"/>
            </ComboBox>

            <!-- Duração Total -->
            <TextBlock Text="⏱ Duração Total da Sessão:"
                       FontSize="14" FontWeight="Medium"
                       Foreground="{DynamicResource TextoPrincipal}"
                       Margin="0,0,0,5"/>
            <Grid Margin="0,0,0,5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Slider x:Name="DuracaoTotalSlider"
                        Grid.Column="0"
                        Minimum="1" Maximum="60"
                        Value="{Binding ElementName=RootControl, Path=DuracaoTotalMinutos, Mode=TwoWay}"
                        TickFrequency="5"
                        TickPlacement="BottomRight"
                        IsSnapToTickEnabled="False"
                        Height="35"
                        VerticalAlignment="Center"/>
                <TextBlock Grid.Column="1"
                           Text="{Binding ElementName=DuracaoTotalSlider, Path=Value, StringFormat='{}{0:F0} min'}"
                           FontSize="16" FontWeight="Bold"
                           Foreground="#9CAF97"
                           VerticalAlignment="Center"
                           Margin="10,0,0,0"
                           Width="60"
                           TextAlignment="Right"/>
            </Grid>
            <TextBlock Text="⚠ Sessão para automaticamente após este tempo"
                       FontSize="10"
                       Foreground="{DynamicResource TextoSecundario}"
                       Margin="0,0,0,15"
                       TextWrapping="Wrap"/>

            <!-- Tempo por Frequência -->
            <TextBlock Text="🎵 Tempo por Frequência:"
                       FontSize="14" FontWeight="Medium"
                       Foreground="{DynamicResource TextoPrincipal}"
                       Margin="0,0,0,5"/>
            <StackPanel Orientation="Horizontal" Margin="0,0,0,5">
                <RadioButton x:Name="Tempo5s"
                             Content="5 seg"
                             GroupName="TempoFreq"
                             IsChecked="{Binding ElementName=RootControl, Path=TempoFrequenciaSegundos, Converter={StaticResource IntToBoolConverter}, ConverterParameter=5, Mode=TwoWay}"
                             Margin="0,0,20,0"
                             VerticalAlignment="Center"/>
                <RadioButton x:Name="Tempo10s"
                             Content="10 seg"
                             GroupName="TempoFreq"
                             IsChecked="{Binding ElementName=RootControl, Path=TempoFrequenciaSegundos, Converter={StaticResource IntToBoolConverter}, ConverterParameter=10, Mode=TwoWay}"
                             Margin="0,0,20,0"
                             VerticalAlignment="Center"/>
                <RadioButton x:Name="Tempo15s"
                             Content="15 seg"
                             GroupName="TempoFreq"
                             IsChecked="{Binding ElementName=RootControl, Path=TempoFrequenciaSegundos, Converter={StaticResource IntToBoolConverter}, ConverterParameter=15, Mode=TwoWay}"
                             VerticalAlignment="Center"/>
            </StackPanel>
            <TextBlock Text="Duração de emissão de cada Hz"
                       FontSize="10"
                       Foreground="{DynamicResource TextoSecundario}"
                       Margin="0,0,0,15"/>

            <!-- Ajuste Hz -->
            <TextBlock Text="🔧 Ajuste de Frequência:"
                       FontSize="14" FontWeight="Medium"
                       Foreground="{DynamicResource TextoPrincipal}"
                       Margin="0,0,0,5"/>
            <Grid Margin="0,0,0,5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Column="0"
                           Text="±"
                           FontSize="18"
                           VerticalAlignment="Center"
                           Margin="0,0,5,0"/>
                <TextBox x:Name="AjusteHzTextBox"
                         Grid.Column="1"
                         Text="{Binding ElementName=RootControl, Path=AjusteHz, Mode=TwoWay}"
                         FontSize="16"
                         Height="35"
                         TextAlignment="Center"
                         VerticalContentAlignment="Center"/>
                <TextBlock Grid.Column="2"
                           Text="Hz"
                           FontSize="14"
                           VerticalAlignment="Center"
                           Margin="5,0,0,0"/>
            </Grid>
            <TextBlock Text="Ajuste aplicado: Hz final = Hz original ± ajuste"
                       FontSize="10"
                       Foreground="{DynamicResource TextoSecundario}"
                       Margin="0,0,0,5"/>
            <TextBlock Text="(Intervalo: -10 até +10 Hz)"
                       FontSize="10"
                       Foreground="{DynamicResource TextoSecundario}"
                       Margin="0,0,0,20"/>

            <!-- Botões Ação (Iniciar + Parar lado a lado) -->
            <Grid Margin="0,0,0,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="10"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <!-- Botão Iniciar (Verde) -->
                <Button x:Name="IniciarButton"
                        Grid.Column="0"
                        Content="{Binding ElementName=RootControl, Path=TextoBotao}"
                        Click="IniciarButton_Click"
                        Height="50"
                        Background="#9CAF97"
                        Foreground="White"
                        FontSize="16"
                        FontWeight="SemiBold"
                        BorderThickness="0"
                        Cursor="Hand">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border Background="{TemplateBinding Background}"
                                                CornerRadius="6"
                                                Padding="{TemplateBinding Padding}">
                                            <ContentPresenter HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#879B83"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="#CCCCCC"/>
                                    <Setter Property="Foreground" Value="#999999"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <!-- Botão Parar (Vermelho) -->
                <Button x:Name="PararButton"
                        Grid.Column="2"
                        Content="⛔ PARAR"
                        Click="PararButton_Click"
                        Height="50"
                        Background="#D32F2F"
                        Foreground="White"
                        FontSize="16"
                        FontWeight="SemiBold"
                        BorderThickness="0"
                        Cursor="Hand">
                    <Button.Style>
                        <Style TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border Background="{TemplateBinding Background}"
                                                CornerRadius="6"
                                                Padding="{TemplateBinding Padding}">
                                            <ContentPresenter HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"/>
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" Value="#B71C1C"/>
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Background" Value="#CCCCCC"/>
                                    <Setter Property="Foreground" Value="#999999"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
            </StackPanel>
        </ScrollViewer>
    </Border>
</UserControl>
